(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{715:function(t,e,n){"use strict";n.r(e);n(35),n(18),n(26),n(43),n(32),n(5),n(44),n(49),n(33);var r=n(19);n(27),n(72);function o(t,e){var n="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!n){if(Array.isArray(t)||(n=function(t,e){if(!t)return;if("string"==typeof t)return c(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return c(t,e)}(t))||e&&t&&"number"==typeof t.length){n&&(t=n);var i=0,r=function(){};return{s:r,n:function(){return i>=t.length?{done:!0}:{done:!1,value:t[i++]}},e:function(t){throw t},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,f=!0,l=!1;return{s:function(){n=n.call(t)},n:function(){var t=n.next();return f=t.done,t},e:function(t){l=!0,o=t},f:function(){try{f||null==n.return||n.return()}finally{if(l)throw o}}}}function c(t,e){(null==e||e>t.length)&&(e=t.length);for(var i=0,n=new Array(e);i<e;i++)n[i]=t[i];return n}var f={data:function(){return{baseUrl:"https://nakamura196.github.io/ogawa",headers:[{text:"Fac",value:"fac"},{text:"Ent",value:"ent"}],items:[],title:this.$t("table")}},head:function(){return{title:this.title}},mounted:function(){var t=this;return Object(r.a)(regeneratorRuntime.mark((function e(){var data,n,r,c,f;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return"https://dydra.com/junjun7613/roman-factoid/sparql","prefix owl: <http://www.w3.org/2002/07/owl#>\nprefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nprefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nprefix xsd: <http://www.w3.org/2001/XMLSchema#>\nprefix dprr: <http://romanrepublic.ac.uk/rdf/ontology#>\nprefix fpo: <https://github.com/johnBradley501/FPO/raw/master/fpo.owl#>\nprefix ex: <https://junjun7613.github.io/roman_factoid/Roman_Contextual_Factoid.owl#>\n\n\nselect ?fac(COUNT(?ent_name) AS ?ent) where { \n{?fac a ex:Action} UNION {?fac a ex:Contact} UNION {?fac a ex:Thought} UNION {?fac a ex:Situation}\n?fac (ex:subject|ex:whom|ex:what)/ex:referencesEntity/ex:name ?ent_name.\n} GROUP BY ?fac\nHAVING (COUNT(?ent_name) > 1)",e.next=4,t.$axios.get("".concat("https://dydra.com/junjun7613/roman-factoid/sparql","?query=").concat(encodeURIComponent("prefix owl: <http://www.w3.org/2002/07/owl#>\nprefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nprefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nprefix xsd: <http://www.w3.org/2001/XMLSchema#>\nprefix dprr: <http://romanrepublic.ac.uk/rdf/ontology#>\nprefix fpo: <https://github.com/johnBradley501/FPO/raw/master/fpo.owl#>\nprefix ex: <https://junjun7613.github.io/roman_factoid/Roman_Contextual_Factoid.owl#>\n\n\nselect ?fac(COUNT(?ent_name) AS ?ent) where { \n{?fac a ex:Action} UNION {?fac a ex:Contact} UNION {?fac a ex:Thought} UNION {?fac a ex:Situation}\n?fac (ex:subject|ex:whom|ex:what)/ex:referencesEntity/ex:name ?ent_name.\n} GROUP BY ?fac\nHAVING (COUNT(?ent_name) > 1)")));case 4:data=e.sent.data,n=[],r=o(data);try{for(r.s();!(c=r.n()).done;)f=c.value,n.push({fac:f.fac,ent:f.ent})}catch(t){r.e(t)}finally{r.f()}t.items=n;case 9:case"end":return e.stop()}}),e)})))()}},l=n(71),w=n(73),h=n.n(w),m=n(466),d=n(711),component=Object(l.a)(f,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("v-container",[n("h2",[t._v(t._s(t.title))]),t._v(" "),n("v-data-table",{attrs:{headers:t.headers,items:t.items,"items-per-page":-1},scopedSlots:t._u([{key:"item.fac",fn:function(e){var r=e.item;return[n("a",{attrs:{href:t.baseUrl+"/snorql/?describe="+encodeURIComponent(r.fac)}},[t._v("\n        "+t._s(r.fac)+"\n      ")])]}}],null,!0)})],1)}),[],!1,null,null,null);e.default=component.exports;h()(component,{VContainer:m.a,VDataTable:d.a})}}]);